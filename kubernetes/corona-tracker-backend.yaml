apiVersion: v1
kind: Secret
metadata:
  name: corona-tracker-backend
  namespace: corona-tracker-app-namespace
type: Opaque
data:
  spring.data.mongodb.username: bW9uZ28tYWRtaW4=
  spring.data.mongodb.password: bW9uZ28tYWRtaW4tcGFzc3dvcmQ=
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: corona-tracker-backend
  namespace: corona-tracker-app-namespace
data:
  logging.pattern.console: "%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n"
  spring.cloud.kubernetes.discovery.all-namespaces: "true"
  spring.data.mongodb.database: "admin"
  spring.data.mongodb.host: "mongodb.mongo.svc.cluster.local"
  spring.output.ansi.enabled: "ALWAYS"
---
# ... Deployment YAML definition
apiVersion: apps/v1                                          # API version
kind: Deployment                                             # Type of kubernetes resource
metadata:
  name: corona-tracker-backend                        # Name of the kubernetes resource
  labels:                                                    # Labels that will be applied to this resource
    app: corona-tracker-backend
  namespace: corona-tracker-app-namespace
spec:
  replicas: 1                                                # No. of replicas/pods to run in this deployment
  selector:
    matchLabels:                                             # The deployment applies to any pods mayching the specified labels
      app: corona-tracker-backend
    
  template:                                                  # Template for creating the pods in this deployment
    metadata:
      name: corona-tracker-backend
      labels:                                                # Labels that will be applied to each Pod in this deployment
        app: corona-tracker-backend
    spec:                                                    # Spec for the containers that will be run in the Pods
      containers:
        - name: corona-tracker-backend
          image: amrityam/corona-tracker-backend:1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: mongodb
              mountPath: /etc/secretspot                            # The port that the container exposes
      volumes:
        - name: mongodb
          secret:
            secretName: corona-tracker-backend
---
# ... Service YAML definition
apiVersion: v1                                               # API version
kind: Service                                                # Type of the kubernetes resource
metadata:
  name: corona-tracker-backend                       # Name of the kubernetes resource
  labels:                                                    # Labels that will be applied to this resource
    app: corona-tracker-backend
  namespace: corona-tracker-app-namespace
spec:
  type: NodePort                                             # The service will be exposed by opening a Port on each node and proxying it. 
  ports:
    - port: 8080
      targetPort: 8080
  selector:                                                  # The service exposes Pods with label `app=corona-tracker-appserver`
    app: corona-tracker-backend